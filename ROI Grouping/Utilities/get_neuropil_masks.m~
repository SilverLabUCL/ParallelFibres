% This function makes filters for for neuropil subtraction
%
% Input:
%    Ain              Spatial filters
%    Cn               Correlation image (after smoothing)
%    dims             Vector of pixel dims of patch: [d1, d2]
%    manual           Set to 1 to choose centres manually, 0 otherwise
% 
% Output:
%    A_neuropil       Spatial mask for fake spatial filters

function Ain_npl = get_neuropil_masks(Ain,Cn,dims,npl_msk_size)


d1 = dims(1);
d2 = dims(2);

N_ROIs = size(Ain,2);

% Average radius of detected varicosity
r = sqrt(mean(sum(Ain,1))/pi);

% First generate mask that defines where neuropil will not be taken
Ain_mask = zeros(d1,d2);
for roi = 1:N_ROIs
    Ain_temp = reshape(Ain(:,roi),d1,d2);
    c = regionprops(Ain_temp,'centroid'); c = round(c.Centroid);

    for i = max(1,c(2)-floor(3*r)) : min(d1,c(2)+ceil(3*r))
        for j = max(1,c(1)-floor(3*r)) : min(d2,c(1)+ceil(3*r))
            dist_temp = sqrt((c(2)-i)^2 + (c(1)-j)^2);
            if dist_temp <= 3*r
                Ain_mask(i,j) = 1; 
            end
        end
    end
end

Ain_npl = zeros(size(Ain));
for roi = 1:N_ROIs
    Ain_temp = reshape(Ain(:,roi),d1,d2);
    c = regionprops(Ain_temp,'centroid'); c = round(c.Centroid);

    Ain_temp = zeros(d1,d2);
    for i = max(1,c(2)-npl_msk_size) : min(d1,c(2)+npl_msk_size)
        for j = max(1,c(1)-npl_msk_size) : min(d2,c(1)+npl_msk_size)
            if Ain_mask(i,j)==0
                Ain_temp(i,j) = 1;
            end
        end
    end

    Ain_npl(:,roi) = Ain_temp(:);
end
    
