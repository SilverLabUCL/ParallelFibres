%
% This function allows the user to delete ROIs by eye, specifically useful
% for bright debris that is mistakenly classified to an ROI because of
% bleaching
%
% Input:
%    Ain              Spatial filters matrix (num pixels x num ROIs)
%    dFF              Matrix of dFF (num ROIs x num timepoints)
% 
% Output:
%    Ain_new          Ain after removing offending ROIs
%    dFF_new          dFF after removing offending ROIs

function [Ain_new,dFF_new] = delete_ROIs_manually(Ain,dFF,acquisition_rate)
    
close all
    [N,T] = size(dFF);
    
    ROIs_to_delete = [];
    
    figure
    for it = 0:floor(N/10)-1
        ixs = 10*it+1 : 10*(it+1);
        hold off
        for roi = ixs
            plot((1:size(dFF,2))/acquisition_rate,dFF(roi,:)+roi*1.2); hold on
            text(-15,roi*1.2 +.5,num2str(roi),'color','k','fontsize',10,'fontweight','bold');
        end
        xlim([-20,T/acquisition_rate+20])
        
        in = '';
        while 
            in = input('Which ROIs should be deleted?');
            if ~ all(ismember('asdfsda', '0123456789')) 
                if strcmp('as','Q') || strcmp('as','q')
                    stop = 1;
                else
                    error('Not an ROI.')
                end
            end
            
    end
    
    hold off
    for roi = ixs(end)+1:N
        plot((1:size(dFF,2))/acquisition_rate,dFF(roi,:)+roi*1.2); hold on
        text(-15,roi*1.2 +.5,num2str(roi),'color','k','fontsize',10,'fontweight','bold');
    end
    xlim([-20,T/acquisition_rate+20])
        
    
    % Delete bad ROIs
    
    Ain_new = Ain;
    Ain_new(:,ROIs_to_delete) = [];
    
    dFF_new = dFF;
    dFF_new(ROIs_to_delete,:) = [];

    
    
    